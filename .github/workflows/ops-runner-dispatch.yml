
ï»¿name: ops-runner-dispatch
run-name: ops-runner: ${{ inputs.op }} on ${{ inputs.target_ref }}

on:
  workflow_dispatch:
    inputs:
      op:
        description: Select operation (daps-ci|rollover-stamp)
        required: true
        default: daps-ci
      target_ref:
        description: Git ref for target workflow
        required: true
        default: main

permissions:
  actions: write
  contents: read

concurrency:
  group: ops-runner-${{ inputs.op }}-${{ inputs.target_ref }}
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Dispatch daps-ci
        if: ${{ inputs.op == 'daps-ci' }}
        run: |
          curl -fsS -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/daps-ci.yml/dispatches" \
            -d "{\"ref\":\"${{ inputs.target_ref }}\"}"
      - name: Dispatch rollover-stamp
        if: ${{ inputs.op == 'rollover-stamp' }}
        run: |
          curl -fsS -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/rollover-stamp.yml/dispatches" \
            -d "{\"ref\":\"${{ inputs.target_ref }}\"}"
      - name: REPORT
        run: |
          echo "REPORT"
          echo "op=${{ inputs.op }}"
          echo "target_ref=${{ inputs.target_ref }}"
          echo "actor=${{ github.actor }}"
          echo "run_id=${{ github.run_id }}"
          python3 - <<'PY'
from datetime import datetime
from zoneinfo import ZoneInfo
print("Timestamp:", datetime.now(ZoneInfo("America/New_York")).strftime("%Y-%m-%d %H%M ET"))
PY

