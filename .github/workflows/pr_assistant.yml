name: PR Assistant
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
permissions:
  contents: read
  pull-requests: write
jobs:
  summarize:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Generate summary
        env:
          BASE_SHA: ${{ github.event.pull_request.base.sha }}
          HEAD_SHA: ${{ github.event.pull_request.head.sha }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: bash .github/scripts/pr_assistant.sh "$BASE_SHA" "$HEAD_SHA" "$PR_NUMBER"
      - name: Upsert PR comment
        uses: actions/github-script@v7
        env:
          COMMENT_BODY_FILE: .github/scripts/_pr_assistant_out.md
        with:
          script: |
            const fs = require('fs');
            const body = fs.readFileSync(process.env.COMMENT_BODY_FILE, 'utf8');
            const {owner, repo, number} = context.issue;
            const marker = '<!-- PR_ASSISTANT_MARKER -->';
            const { data: comments } = await github.rest.issues.listComments({owner, repo, issue_number: number, per_page: 100});
            const existing = comments.find(c => c.body && c.body.includes(marker));
            if (existing) {
              await github.rest.issues.updateComment({owner, repo, comment_id: existing.id, body});
            } else {
              await github.rest.issues.createComment({owner, repo, issue_number: number, body});
            }
