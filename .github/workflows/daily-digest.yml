name: Daily Status Digest
on:
  schedule: [{ cron: '30 13 * * *' }]  # 09:30 ET (UTC)
  workflow_dispatch:
permissions:
  contents: read
  issues: write
jobs:
  digest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/github-script@v7
        id: log
        with:
          script: |
            const {owner, repo} = context.repo;
            const since = new Date(Date.now()-24*60*60*1000).toISOString();
            const commits = await github.paginate(
              github.rest.repos.listCommits, {owner, repo, since}
            );
            const lines = commits.map(c=>`- ${c.commit.author.date} ${c.sha.slice(0,7)} ${c.commit.message.split('\n')[0]}`).join('\n') || 'No commits in last 24h.';
            core.setOutput('lines', lines);
      - name: Summarize with OpenAI
        env: { OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }} }
        run: |
          python - <<'PY'
          import os, json, urllib.request, datetime
          lines = """${{ steps.log.outputs.lines }}"""
          req = {
            "model":"gpt-4o-mini",
            "temperature":0.2,
            "messages":[
              {"role":"system","content":"Daily GDD digest. Terse. Buckets: patches, trackers, root edits, workflows."},
              {"role":"user","content":lines}
            ]
          }
          data = json.dumps(req).encode("utf-8")
          r = urllib.request.Request("https://api.openai.com/v1/chat/completions", data=data,
              headers={"Authorization":"Bearer "+os.environ["OPENAI_API_KEY"],"Content-Type":"application/json"})
          out = json.loads(urllib.request.urlopen(r).read().decode())
          open("digest.md","w",encoding="utf-8").write(out["choices"][0]["message"]["content"])
          PY
      - uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs'); const {owner, repo} = context.repo;
            const title = `Daily Status ${new Date().toISOString().slice(0,10)}`;
            const body  = fs.readFileSync('digest.md','utf8');
            await github.rest.issues.create({owner, repo, title, body});
